{"version":3,"sources":["Counter.js","DateTime.js","watch/WatchStyledComponents.js","watch/WatchFaceComponents.js","watch/Watch.js","todos/TodoAction.js","todos/TodoReducer.js","todos/TodoForm.js","todos/Todo.js","todos/TodoList.js","todos/Todos.js","SimpleCalculator.js","App.js","serviceWorker.js","index.js"],"names":["Counter","_ref","initialCount","_useState","useState","_useState2","Object","slicedToArray","count","setCount","padding","marginLeft","marginRight","react_default","a","createElement","react","style","className","onClick","DateTime","Date","dateTime","setDateTime","useEffect","id","setInterval","clearInterval","concat","toLocaleDateString","toLocaleTimeString","clip","Strap","styled","div","_templateObject","Hand","_templateObject2","p","type","value","Bezel","_templateObject3","Screen","_templateObject4","Face","_templateObject5","Value","_templateObject6","small","opaque","Day","_templateObject7","DefaultFace","date","format","DateFace","_ref2","hours","minutes","monthYear","SecondsFace","_ref3","seconds","AnalogFace","_ref4","DayFace","_ref5","dayN","day","Watch","_ref$face","face","WatchFaceComponents_DefaultFace","d","setDate","console","log","moment","useDate","ADD_ACTION","Symbol","DELETE_ACTION","TODO_COMPLETE_ACTION","TodosDispatch","createContext","TodoReducer","state","arguments","length","undefined","payload","toConsumableArray","filter","map","todo","objectSpread","completed","headerStyle","margin","TodoForm","text","setText","dispatch","useContext","name","placeholder","onChange","target","uuid","Todo","e","stopPropagation","window","confirm","TodoList","todos","Todo_Todo","key","Todos","_useReducer","useReducer","_useReducer2","Provider","TodoForm_TodoForm","TodoList_TodoList","textBoxStyle","width","formElementStyle","SimpleCalculator","_useState3","_useState4","setA","_useState5","_useState6","b","setB","_useState7","_useState8","symbols","setSymbols","result","useMemo","calculate","htmlFor","readOnly","App","Counter_Counter","DateTime_DateTime","Watch_Watch","WatchFaceComponents_DayFace","WatchFaceComponents_AnalogFace","WatchFaceComponents_DateFace","WatchFaceComponents_SecondsFace","SimpleCalculator_SimpleCalculator","Todos_Todos","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.539d42df.chunk.js","sourcesContent":["import React, { useState, Fragment } from 'react';\r\n\r\nexport const Counter = ({ initialCount }) => {\r\n    const [count, setCount] = useState(+initialCount);\r\n    const padding = {\r\n        marginLeft: '5px',\r\n        marginRight: '5px',\r\n    }\r\n    return (\r\n        <Fragment>\r\n            <button style={padding} className=\"Pad\" onClick={() => setCount(count - 1)}>-</button>\r\n            {count}\r\n            <button style={padding} className=\"Pad\" onClick={() => setCount(count + 1)}>+</button>\r\n        </Fragment>\r\n    );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nexport const DateTime = () => {\r\n    const [dateTime, setDateTime] = useState(new Date());\r\n\r\n    useEffect(() => {\r\n        const id = setInterval(() => setDateTime(new Date()), 1000);\r\n        return () => {\r\n            clearInterval(id);\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <h4>{`${dateTime.toLocaleDateString()} ${dateTime.toLocaleTimeString()}`}</h4>\r\n    );\r\n\r\n}","import styled from 'styled-components';\r\n\r\nconst clip = 'polygon(0 5%, 5% 0, 95% 0, 100% 5%, 100% 95%, 95% 100%, 5% 100%, 0 95%)'\r\n\r\nexport const Strap = styled.div`\r\n  clip-path: ${clip};\r\n  height: 300px;\r\n  overflow: hidden;\r\n  position: relative;\r\n  width: 100px;\r\n`;\r\n\r\nexport const Hand = styled.div`\r\n  width: ${p => (p.type === 'seconds' ? 2 : 5)}px;\r\n  height: ${p => (p.type ? 40 : 20)}px;\r\n  background: white;\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform-origin: bottom;\r\n  transform: translate(-50%, -100%) rotate(${p => p.value}deg);\r\n`;\r\n\r\nexport const Bezel = styled.div`\r\n  background: silver;\r\n  height: 60%;\r\n  left: 50%;\r\n  position: absolute;\r\n  top: 50%;\r\n  transform: translate(-50%, -50%);\r\n  clip-path: ${clip};\r\n  width: 102%;\r\n`;\r\nexport const Screen = styled.div`\r\n  height: 100%;\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  overflow: hidden;\r\n  transform: translate(-50%, -50%);\r\n  width: 90%;\r\n  background: #000;\r\n  color: #fff;\r\n`;\r\n\r\nexport const Face = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n`;\r\n\r\nexport const Value = styled.div`\r\n  font-size: ${p => (p.small ? 2 : 3)}rem;\r\n  line-height: ${p => (p.small ? 2 : 3)}rem;\r\n  text-transform: uppercase;\r\n  text-align: center;\r\n  opacity: ${p => (p.opaque ? 0.5 : 1)};\r\n`;\r\n\r\nexport const Day = styled.div`\r\n  text-transform: uppercase;\r\n  text-align: center;\r\n`;","import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Day, Value, Hand } from './WatchStyledComponents';\r\n\r\nconst facePropTypes = {\r\n    date: PropTypes.object,\r\n}\r\n\r\nexport const DefaultFace = ({ date }) => (\r\n    <Fragment>\r\n        <Value>{date.format('HH')}</Value>\r\n        <Value>{date.format('mm')}</Value>\r\n    </Fragment>\r\n)\r\n\r\nDefaultFace.propTypes = facePropTypes;\r\n\r\nexport const DateFace = ({ date }) => {\r\n    const hours = date.format('HH');\r\n    const minutes = date.format('mm');\r\n    const monthYear = date.format('MMM DD');\r\n    return (\r\n        <Fragment>\r\n            <Value>{hours}</Value>\r\n            <Day>{monthYear}</Day>\r\n            <Value>{minutes}</Value>\r\n        </Fragment>\r\n    );\r\n}\r\nDateFace.propTypes = facePropTypes;\r\n\r\nexport const SecondsFace = ({ date }) => {\r\n    const hours = date.format('HH');\r\n    const minutes = date.format('mm');\r\n    const seconds = date.format('ss');\r\n    return (\r\n        <Fragment>\r\n            <Value>{hours}</Value>\r\n            <Value>{minutes}</Value>\r\n            <Value>{seconds}</Value>\r\n        </Fragment>\r\n    )\r\n}\r\nSecondsFace.propTypes = facePropTypes;\r\n\r\nexport const AnalogFace = ({ date }) => {\r\n    const seconds = (360 / 60) * date.seconds();\r\n    const minutes = (360 / 60) * date.minutes();\r\n    const hours = (360 / 12) * date.format('h');\r\n    return (\r\n        <Fragment>\r\n            <Hand type=\"seconds\" value={seconds} />\r\n            <Hand type=\"minutes\" value={minutes} />\r\n            <Hand value={hours} />\r\n        </Fragment>\r\n    )\r\n}\r\nAnalogFace.propTypes = facePropTypes;\r\n\r\nexport const DayFace = ({ date }) => {\r\n    const hours = date.format('H');\r\n    const minutes = date.format('mm');\r\n    const dayN = date.format('dd');\r\n    const day = date.format('DD');\r\n    return (\r\n        <Fragment>\r\n            <Value small>{hours}</Value>\r\n            <Value small>{minutes}</Value>\r\n            <Value small opaque>\r\n                {dayN}\r\n            </Value>\r\n            <Value small opaque>\r\n                {day}\r\n            </Value>\r\n        </Fragment>\r\n    )\r\n}\r\nDayFace.propTypes = facePropTypes;","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport moment from 'moment';\r\n\r\nimport { Strap, Bezel, Screen, Face } from './WatchStyledComponents';\r\nimport { DefaultFace } from './WatchFaceComponents';\r\n\r\n/* export class Watch extends Component {\r\n    state = {\r\n        date: moment(),\r\n    }\r\n    static propTypes = {\r\n        face: PropTypes.func,\r\n    }\r\n    static defaultProps = {\r\n        face: date => <DefaultFace date={date} />,\r\n    }\r\n    componentDidMount = () => (this.TICK = setInterval(this.update, 1000))\r\n    componentWillUnmount = () => clearInterval(this.TICK)\r\n    update = () => this.setState({ date: moment() })\r\n    render = () => (\r\n        <Strap>\r\n            <Bezel>\r\n                <Screen>\r\n                    <Face>{this.props.face(this.state.date)}</Face>\r\n                </Screen>\r\n            </Bezel>\r\n        </Strap>\r\n    )\r\n} */\r\n\r\n/**\r\n * custom Hooks\r\n * @param {*} d\r\n */\r\nconst useDate = (d) => {\r\n    const [date, setDate] = useState(d);\r\n    useEffect(() => {\r\n        console.log('useEffect called');\r\n        const id = setInterval(() => setDate(moment()), 1000);\r\n        return () => {\r\n            console.log('useEffect flush called');\r\n            clearInterval(id);\r\n        }\r\n    }, []);\r\n    return date;\r\n}\r\n\r\nexport const Watch = ({ face = date => <DefaultFace date={date} /> }) => {\r\n    /* const [date, setDate] = useState(moment());\r\n    useEffect(() => {\r\n        console.log('useEffect called');\r\n        const id = setInterval(() => setDate(moment()), 1000);\r\n        return () => {\r\n            console.log('useEffect flush called');\r\n            clearInterval(id);\r\n        }\r\n    }, []); */\r\n\r\n    const date = useDate(moment());\r\n\r\n    return (\r\n        <Strap>\r\n            <Bezel>\r\n                <Screen>\r\n                    <Face>{face(date)}</Face>\r\n                </Screen>\r\n            </Bezel>\r\n        </Strap>\r\n    );\r\n\r\n};\r\n\r\nWatch.propTypes = { face: PropTypes.func };","export const ADD_ACTION = Symbol('ADD_ACTION');\r\nexport const DELETE_ACTION = Symbol('DELETE_ACTION');\r\nexport const TODO_COMPLETE_ACTION = Symbol('TODO_COMPLETE_ACTION');\r\n","import { createContext } from 'react';\r\nimport { ADD_ACTION, DELETE_ACTION, TODO_COMPLETE_ACTION } from './TodoAction';\r\n\r\nexport const TodosDispatch = createContext(null);\r\n\r\nexport const TodoReducer = (state = [], { type, payload }) => {\r\n    switch (type) {\r\n        case ADD_ACTION:\r\n            return [\r\n                ...state,\r\n                payload\r\n            ];\r\n        case DELETE_ACTION:\r\n            return state.filter(({ id }) => id !== payload.id);\r\n        case TODO_COMPLETE_ACTION:\r\n            return state.map(todo => (todo.id === payload.id) ? { ...todo, completed: !todo.completed } : todo);\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import React, { useState, useContext } from 'react';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\nimport { TodosDispatch } from './TodoReducer';\r\nimport { ADD_ACTION } from './TodoAction';\r\nconst headerStyle = {\r\n    margin: '5px',\r\n}\r\n\r\nexport const TodoForm = () => {\r\n    const [text, setText] = useState('');\r\n    const dispatch = useContext(TodosDispatch);\r\n    const onChangeText = ({ target: { value } }) => setText(value);\r\n    const submitForm = () => {\r\n        dispatch({\r\n            type: ADD_ACTION,\r\n            payload: {\r\n                id: uuid(),\r\n                completed: false,\r\n                text,\r\n            }\r\n        });\r\n        setText('');\r\n    }\r\n    return (\r\n        <div id=\"myDIV\" className=\"header\">\r\n            <h2 style={headerStyle}>TODO List</h2>\r\n            <input type=\"text\" name=\"text\" id=\"myInput\" placeholder=\"Enter your To Do...\" value={text} onChange={onChangeText} />\r\n            <span onClick={submitForm} className=\"addBtn\">Add</span>\r\n        </div>\r\n    );\r\n};","import React, { useContext } from 'react';\r\nimport { TodosDispatch } from './TodoReducer';\r\nimport { DELETE_ACTION, TODO_COMPLETE_ACTION } from './TodoAction';\r\n\r\nexport const Todo = ({ todo }) => {\r\n\r\n    const { id, text, completed } = todo;\r\n    const dispatch = useContext(TodosDispatch);\r\n\r\n    const toggleTodo = () => {\r\n        dispatch({ type: TODO_COMPLETE_ACTION, payload: { id } });\r\n    }\r\n\r\n    const deleteTodo = (e) => {\r\n        e.stopPropagation();\r\n        if (window.confirm('Are you sure to delete?')) {\r\n            dispatch({ type: DELETE_ACTION, payload: { id } });\r\n        }\r\n        return;\r\n    }\r\n\r\n    return (\r\n        <li onClick={toggleTodo} className={completed ? 'checked' : null}>\r\n            {text}\r\n            <span onClick={deleteTodo} className=\"close\">×</span>\r\n        </li>\r\n    );\r\n};","import React from 'react';\r\nimport { Todo } from './Todo';\r\nexport const TodoList = ({ todos }) => {\r\n    return (\r\n        <ul id=\"myUL\">\r\n            {todos.map((todo) => <Todo todo={todo} key={todo.id} />)}\r\n        </ul>\r\n    );\r\n};","import React, { useReducer } from 'react';\r\nimport { TodoForm } from './TodoForm';\r\nimport { TodoList } from './TodoList';\r\n\r\nimport { TodoReducer, TodosDispatch } from './TodoReducer';\r\n\r\nexport const Todos = ({ todos }) => {\r\n    const [state, dispatch] = useReducer(TodoReducer, todos);\r\n\r\n    return (\r\n        <div className=\"todos-container\">\r\n            <TodosDispatch.Provider value={dispatch}>\r\n                <TodoForm></TodoForm>\r\n                <TodoList todos={state}></TodoList>\r\n            </TodosDispatch.Provider>\r\n        </div>\r\n    );\r\n}\r\n","import React, { Fragment, useState, useMemo, useEffect } from 'react';\r\n\r\nconst textBoxStyle = {\r\n    width: '50px',\r\n};\r\n\r\nconst formElementStyle = {\r\n    padding: '0px 10px',\r\n};\r\n\r\nconst calculate = (a, b, symbols) => {\r\n    console.log('calculate is called');\r\n    switch (symbols) {\r\n        case '+':\r\n            return a + b;\r\n        case '-':\r\n            return a - b;\r\n        case '*':\r\n            return a * b;\r\n        case '/':\r\n            return a / b;\r\n        default:\r\n            return 0;\r\n    }\r\n}\r\n\r\n/* const useCalculator = (a, b, symbols) => {\r\n    const result = useMemo(() => calculate(a, b, symbols), [a, b, symbols]);\r\n    return result;\r\n} */\r\n\r\n/* export const CalculationResult = ({ a, b, symbols }) => {\r\n    const result = useMemo(() => calculate(a, b, symbols), [a, b, symbols]);\r\n    return (\r\n        <span style={formElementStyle}>\r\n            <label htmlFor=\"c\"></label>\r\n            <input id=\"c\" type=\"text\" style={textBoxStyle} value={result} readOnly />\r\n        </span>\r\n    );\r\n}; */\r\n\r\nconst useDate = (d) => {\r\n    const [dateTime, setDateTime] = useState(d);\r\n    useEffect(() => {\r\n        const id = setInterval(() => setDateTime(new Date()), 1000);\r\n        return () => {\r\n            clearInterval(id);\r\n        }\r\n    }, []);\r\n    return dateTime;\r\n}\r\n\r\nexport const SimpleCalculator = () => {\r\n    const dateTime = useDate(new Date());\r\n    const [a, setA] = useState('');\r\n    const [b, setB] = useState('');\r\n    const [symbols, setSymbols] = useState('+');\r\n    // recalculated only when input change\r\n    const result = useMemo(() => calculate(a, b, symbols), [a, b, symbols]);\r\n    // recalculated on every render\r\n    // const result = calculate(a, b, symbols);\r\n\r\n    const handleA = ({ target: { value } }) => {\r\n        setA(value ? +value : '');\r\n    }\r\n\r\n    const handleB = ({ target: { value } }) => {\r\n        setB(value ? +value : '');\r\n    }\r\n\r\n    const handleSymbols = ({ target: { value } }) => {\r\n        setSymbols(value);\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <span style={formElementStyle}>\r\n                <label htmlFor=\"a\">Time</label>\r\n                {dateTime.toLocaleTimeString()}\r\n            </span>\r\n            <span style={formElementStyle}>\r\n                <label htmlFor=\"a\"></label>\r\n                <input id=\"a\" type=\"text\" style={textBoxStyle} value={a} onChange={handleA} />\r\n            </span>\r\n            <span>\r\n                <label htmlFor=\"symbols\"></label>\r\n                <select id=\"symbols\" value={symbols} onChange={handleSymbols}>\r\n                    <option value=\"+\">+</option>\r\n                    <option value=\"-\">-</option>\r\n                    <option value=\"*\">*</option>\r\n                    <option value=\"/\">/</option>\r\n                </select>\r\n            </span>\r\n            <span style={formElementStyle}>\r\n                <label htmlFor=\"b\"></label>\r\n                <input id=\"b\" type=\"text\" style={textBoxStyle} value={b} onChange={handleB} />\r\n            </span>\r\n            <span>=</span>\r\n            <span style={formElementStyle}>\r\n                <label htmlFor=\"c\"></label>\r\n                <input id=\"c\" type=\"text\" style={textBoxStyle} value={result} readOnly />\r\n            </span>\r\n        </Fragment>\r\n    );\r\n};","import React from 'react';\nimport './App.css';\n\nimport { Counter } from './Counter';\nimport { DateTime } from './DateTime';\nimport { Watch } from './watch/Watch';\nimport { DateFace, DayFace, AnalogFace, SecondsFace } from './watch/WatchFaceComponents';\nimport { Todos } from './todos/Todos';\nimport { SimpleCalculator } from './SimpleCalculator';\n\nconst todos = [\n  {\n    id: '2380f912-a619-403c-8cf1-510efc54cefe',\n    text: 'todo 1',\n    completed: false\n  },\n  {\n    id: 'f44a2399-0c6f-4fd6-bc0f-fe453ccdc58a',\n    text: 'todo 2',\n    completed: true\n  },\n  {\n    id: 'e22367c3-7350-43bd-a4d5-e2797680531d',\n    text: 'todo 3',\n    completed: false\n  }\n]\nconst App = () => (\n  <div className=\"App\">\n    <h4>Counter Example</h4>\n    <hr />\n    <Counter initialCount=\"5\"></Counter>\n    <h4>DateTime Example</h4>\n    <hr />\n    <DateTime />\n    <h4>Watch Example</h4>\n    <hr />\n    <div className=\"Watch\">\n      <Watch />\n      <Watch face={date => <DayFace date={date} />} />\n      <Watch face={date => <AnalogFace date={date} />} />\n      <Watch face={date => <DateFace date={date} />} />\n      <Watch face={date => <SecondsFace date={date} />} />\n    </div>\n    <h4>Simple Calculator</h4>\n    <hr />\n    <SimpleCalculator />\n    <h4>Todo Example</h4>\n    <hr />\n    <Todos todos={todos} />\n\n  </div>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}